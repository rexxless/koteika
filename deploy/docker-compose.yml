services:
  backend:
    build:
      context: ../
      dockerfile: deploy/php/Dockerfile
    container_name: backend
    user: "1000:1000"
    depends_on:
      - postgres
    volumes:
      - ../backend:/var/www
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ../backend:/var/www
    depends_on:
      - backend
      - postgres
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    env_file:
      - ../backend/.env
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    container_name: postgres
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: always
    networks:
      - app-network

  frontend:
    build:
      context: ../
      dockerfile: ./deploy/node/Dockerfile
    container_name: frontend
    working_dir: /app
    volumes:
      - ../frontend:/app:delegated
      - /app/node_modules
    ports:
      - "5173:5173"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
